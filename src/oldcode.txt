// 	function showPost(tpc) {
// 		let topic = document.getElementById("topic");
// 		let newPost =[];
		
// 		Object.keys(tpc).find((elem)=>{
// 			if(tpc.topic_title===topic.value){
// 				newPost = tpc["listPosts"];
// 				return  tpc["listPosts"];
// 			}
// 		});
// 		newPost.map((elem)=>{
// 			console.log(newPost[elem],"lllllll");
// 			// let section = document.createElement('section');
// 			// forumlist.appendChild(section);
// 			// section.innerHTML=`${
// 			// 	<button>${elem.id} </button>
// 			// }`
// 		});
// 	}

Object.keys(forumData).find((elem) => {
                if (forumData[elem].name === category) {
                    // console.log("yes",options[elem]);
                    newPost = forumData[elem];
                    return forumData[elem];
                }
            });

			console.log(newPost.topicList);
    //  let nesListPost = {};

            Object.keys(newPost).map(() => {
                let topicls = newPost["topicList"];
				// topicls.find((elem)=>{
				// 	console.log(topicls[elem], "now, I'm here");
				// })
				console.log(topicls[0], "I'm here");
            });

    setPost(newPost);
        //    console.log(newPost,"=========");
		//    let topicTag = document.getElementById("topic");
		//    topicTag.addEventListener('click', () => {
			createMiddlecPost(newPost)
		// });
		console.log(post);



        // Object.keys(newPost).map((elem)=>{
	// 	console.log(newPost[elem]);
	// 	let section = document.createElement("section");
	// 	forumlist.appendChild(section);
	// 	forumlist.innerHTML=`<section className="list-single-item" key=>
	// 				<section className="item-row-info">
    //                     <label htmlFor="">add icons ${newPost.topicList[0]} </label>
    //                     <input type="text" value={} />
    //                     <img src="./like-button.png" id="like" alt="like" onClick={() => {
                           

    //                     }} />
    //                     <img src="./dislike-icon-5.png" id="dislike"
    //                         onClick={() => {
                              
    //                         }} alt="dislike" />
    //                 </section>
	// 	</section>`;
	// })


    useEffect(()=>{
        Test();
    })
   
    const Test = () => {
        setCount((count) => {
            count=forumData;
            console.log(count, "我在里面没出啦");
            return count;
        })
    }



    import React, { useEffect, useState } from 'react';


const FromListItem = (props) => {
    let handleForumdelete = props.handleForumdelete;
    let handleForumLike = props.handleForumLike;
    let handleForumdislike = props.handleForumdislike;
    let forumData = props.forumData;
    let [count, setCount] = useState({});
    let [topic, setTopic] = useState(null);
   
    
//     useEffect(()=>{
//         let topc = document.getElementById("topic");
//         // // topc.addEventListener('click', ()=>{
//             // showPost(forumData) 
//             Test();
//         // // });
//         console.log(count, "我在effect里面");
       
//         // Topic();
//     },[forumData]);
useEffect(()=>{
    Test();
})

const Test = () => {
    setCount((count) => {
        count=forumData;
        console.log(count, "我在里面没出啦");
        return count;
    })
}
//  const Topic=()=>{
//     let toic = document.getElementById("topic").value;
//      setTopic(toic);
//      console.log("我是李吗的topic");
//  }
//  console.log(topic,"我是外面的topic");
       
    function showPost(forumData) {
        let newPost = [];
        let topic = document.getElementById("topic").value;
        let category = document.getElementById("category").value;
        if(category === undefined || topic === undefined){

        }else{
            Object.keys(forumData).map((elem) => {
                if(forumData[elem].name === category){
                 let topicName=forumData[elem].topicList;
                 //    console.log(topicName, "name");
                    topicName.map((elem)=>{
                      if(elem.topic_title === topic){
                         newPost=elem;
                      }
                    })
                }
                console.log(newPost,"shenm");
                 return forumData[elem].name === category
         });
        
     return newPost;
        }
    }
console.log(count,"窝在外面");
    return (
        <section id="forum-list">
            {forumData[0].topicList[1].listPosts.map((frm, index) => (
                <section className="list-single-item" key={frm.id}>
                    <section className="item-row-info">
                        <label htmlFor="">add icons {frm.id}  count: </label>
                        <input type="text" value={frm["text"]} />
                        <img src="./like-button.png" id="like" alt="like" onClick={() => {
                            handleForumLike(frm, index);

                        }} />
                        <img src="./dislike-icon-5.png" id="dislike"
                            onClick={() => {
                                setTimeout(handleForumdislike(frm, index), 100);
                            }} alt="dislike" />
                    </section>

                    <section className="item-row-info">
                        <label htmlFor="">by: {frm["author"]}</label>
                        <label htmlFor="">{frm["date"]}</label>
                        <label className="likesAndDislike" htmlFor="">Likes: {frm.likes}</label>
                        <button className="forum-delete"
                            onClick={() => {
                                // handleForumdelete(frm.id);
                                // showPost(forumData);
                                // Test();
                               console.log(count, "chulail");
                        
                            }}>
                            delete
                        </button>
                    </section>
                </section>
            ))}
        </section>
    );
}

export default FromListItem;